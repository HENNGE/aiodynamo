version: 2.1
executors:
  python:
    parameters:
      version:
        type: string
    docker:
      - image: python:<< parameters.version >>
        environment:
          DYNAMODB_URL: http://localhost:8000
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy
      - image: dimaqq/dynalite:latest
    working_directory: /home/ubuntu/aiodynamo
commands:
  runtests:
    steps:
      - checkout
      - run: pip install poetry
      - run: poetry install -E "httpx aiohttp"
      - run: find . -regex '.*__pycache__.*' -delete
      - run: poetry run pytest --verbose --cov=aiodynamo --cov-report html:reports/coverage/ --junitxml=reports/results/junit.xml
      - run: poetry run black --check src/ tests/
      - run: poetry run mypy
      - run: poetry run isort --check --diff src tests
      - store_artifacts:
          path: reports/coverage/
          destination: reports
      - store_test_results:
          path: reports/results/
  deploy:
    steps:
      - checkout
      - run: pip install poetry
      - run: poetry build
      - run: poetry config pypi-token.pypi ${PYPI_TOKEN}
      - run: poetry publish

jobs:
  py37:
    executor:
      name: python
      version: "3.7"
    steps:
      - runtests
  py38:
    executor:
      name: python
      version: "3.8"
    steps:
      - runtests
  py39:
    executor:
      name: python
      version: "3.9"
    steps:
      - runtests
  py310:
    executor:
      name: python
      version: "3.10"
    steps:
      - runtests
  deploy:
    executor:
      name: python
      version: "3.8"
    steps:
      - deploy

workflows:
  build_and_deploy:
    jobs:
      - py37
      - py38
      - py39
      - py310
      - deploy:
          requires:
            - py37
            - py38
            - py39
            - py310
          filters:
            branches:
              only:
                - master
