[tool.poetry]
name = "aiodynamo"
version = "23.10.1"
description = "Asyncio DynamoDB client"
authors = ["Jonas Obrist <jonas.obrist@hennge.com>"]
license = "Apache-2.0"
repository = "https://github.com/HENNGE/aiodynamo"
documentation = "https://aiodynamo.readthedocs.io"
classifiers = [
    "Framework :: AsyncIO",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3 :: Only",
    "Typing :: Typed",
    "License :: OSI Approved :: Apache Software License",
]
readme = "readme.md"
homepage = "https://github.com/HENNGE/aiodynamo"
keywords = ["dynamodb", "asyncio", "aws"]

[tool.poetry.dependencies]
python = "^3.8"
httpx = {version = ">=0.15.0 <1.0.0", optional = true}
aiohttp = {version = "^3.6.2", optional = true}
yarl = "^1.4.2"

[tool.poetry.extras]
httpx = ["httpx"]
aiohttp = ["aiohttp"]

[tool.poetry.group.dev.dependencies]
pytest = "^6.0"
pytest-asyncio = "^0.17"
pytest-cov = "^2.6"
black = "^22.3"
sphinx = "^7"
pyperf = "^2.0"
boto3 = "^1.12.18"
freezegun = "^1.0"
mypy = "^1.5.1"
pyfakefs = "^4.3.2"
isort = "^5.8.0"
types-freezegun = "^1.1.6"
urllib3 = "< 1.27"
furo = "^2023.9.10"
ruff = "^0.0.292"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = "tests"

[tool.isort]
line_length = "88"
multi_line_output = "3"
combine_as_imports = "1"
include_trailing_comma = "True"
known_first_party = "aiodynamo"

[tool.mypy]
strict = true
files = [
    "src/",
    "tests/",
]

[tool.ruff]
ignore = [
    "E722", # Do not use bare `except`
    "E501", # Line too long (104 > 88 characters)
]
select = [
    "E", "F", "T201",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
